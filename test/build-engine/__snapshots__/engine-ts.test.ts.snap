// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WASM build WASM: file 2 code 1`] = `
{
  "native/external/wasm/emscripten/wasm_c.asm.js.36955.ts": "// @ts-nocheck
var Module = (() => {
  var _scriptDir = import.meta.url;
  
  return (
async function(Module = {})  {

var Module=typeof Module!="undefined"?Module:{};var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject;});var moduleOverrides=Object.assign({},Module);var ENVIRONMENT_IS_WEB=typeof window=="object";var ENVIRONMENT_IS_WORKER=typeof importScripts=="function";var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_NODE){const{createRequire:createRequire}=await import('module');var require=createRequire(import.meta.url);var fs=require("fs");var nodePath=require("path");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+"/";}else {scriptDirectory=require("url").fileURLToPath(new URL("./",import.meta.url));}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:"utf8")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret);}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer);});};if(!Module["thisProgram"]&&process.argv.length>1){process.argv[1].replace(/\\\\/g,"/");}process.argv.slice(2);Module["inspect"]=function(){return "[Emscripten Module object]"};}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href;}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src;}if(_scriptDir){scriptDirectory=_scriptDir;}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1);}else {scriptDirectory="";}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)};}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror();};xhr.onerror=onerror;xhr.send(null);};}}else;var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module["arguments"])Module["arguments"];if(Module["thisProgram"])Module["thisProgram"];if(Module["quit"])Module["quit"];var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];Module["noExitRuntime"]||true;var WebAssembly={Memory:function(opts){this.buffer=new ArrayBuffer(opts["initial"]*65536);},Module:function(binary){},Instance:function(module,info){this.exports=(
// EMSCRIPTEN_START_ASM
function instantiate(G){function c(d){d.set=function(a,b){this[a]=b;};d.get=function(a){return this[a]};return d}function E(F){var e=F.a;var f=e.a;var g=f.buffer;var h=new Int8Array(g);var j=new Int32Array(g);var k=new Uint8Array(g);var z=e.b;var A=e.c;var B=67760;
// EMSCRIPTEN_START_FUNCS
function H(a){var b=0,c=0,d=0,e=0,f=0,g=0;c=1024;d=j[264];a:{if(!d){if(I()){break a}d=j[264];}b=d;d=j[265];if(b-d>>>0<a>>>0){return C[j[269]](1040,1024,a)|0}b:{if(j[280]<0){break b}b=a;while(1){e=b;if(!b){e=0;break b}b=e-1|0;if(k[b+1024|0]!=10){continue}break}b=C[j[269]](1040,1024,e)|0;if(e>>>0>b>>>0){break a}c=e+1024|0;a=a-e|0;d=j[265];}b=d;c:{if(a>>>0>=512){A(b|0,c|0,a|0);break c}f=a+b|0;d:{if(!((b^c)&3)){e:{if(!(b&3)|!a){break e}while(1){h[b|0]=k[c|0];c=c+1|0;b=b+1|0;if(!(b&3)){break e}if(b>>>0<f>>>0){continue}break}}g=f&-4;f:{if(g>>>0<64){break f}d=g+-64|0;if(d>>>0<b>>>0){break f}while(1){j[b>>2]=j[c>>2];j[b+4>>2]=j[c+4>>2];j[b+8>>2]=j[c+8>>2];j[b+12>>2]=j[c+12>>2];j[b+16>>2]=j[c+16>>2];j[b+20>>2]=j[c+20>>2];j[b+24>>2]=j[c+24>>2];j[b+28>>2]=j[c+28>>2];j[b+32>>2]=j[c+32>>2];j[b+36>>2]=j[c+36>>2];j[b+40>>2]=j[c+40>>2];j[b+44>>2]=j[c+44>>2];j[b+48>>2]=j[c+48>>2];j[b+52>>2]=j[c+52>>2];j[b+56>>2]=j[c+56>>2];j[b+60>>2]=j[c+60>>2];c=c- -64|0;b=b- -64|0;if(d>>>0>=b>>>0){continue}break}}if(b>>>0>=g>>>0){break d}while(1){j[b>>2]=j[c>>2];c=c+4|0;b=b+4|0;if(g>>>0>b>>>0){continue}break}break d}if(f>>>0<4){break d}d=f-4|0;if(d>>>0<b>>>0){break d}while(1){h[b|0]=k[c|0];h[b+1|0]=k[c+1|0];h[b+2|0]=k[c+2|0];h[b+3|0]=k[c+3|0];c=c+4|0;b=b+4|0;if(d>>>0>=b>>>0){continue}break}}if(b>>>0<f>>>0){while(1){h[b|0]=k[c|0];c=c+1|0;b=b+1|0;if((f|0)!=(b|0)){continue}break}}}j[265]=j[265]+a;b=a+e|0;}return b}function O(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,k=0;f=B-32|0;B=f;d=j[a+28>>2];j[f+16>>2]=d;g=j[a+20>>2];j[f+28>>2]=c;j[f+24>>2]=b;b=g-d|0;j[f+20>>2]=b;g=b+c|0;i=2;a:{b:{b=f+16|0;d=z(j[a+60>>2],b|0,2,f+12|0)|0;if(d){j[554]=d;d=-1;}else {d=0;}c:{d:{if(d){d=b;break d}while(1){e=j[f+12>>2];if((e|0)==(g|0)){break c}if((e|0)<0){d=b;break b}h=j[b+4>>2];k=h>>>0<e>>>0;d=(k<<3)+b|0;h=e-(k?h:0)|0;j[d>>2]=h+j[d>>2];b=(k?12:4)+b|0;j[b>>2]=j[b>>2]-h;g=g-e|0;b=d;i=i-k|0;e=z(j[a+60>>2],b|0,i|0,f+12|0)|0;if(e){j[554]=e;e=-1;}else {e=0;}if(!e){continue}break}}if((g|0)!=-1){break b}}b=j[a+44>>2];j[a+28>>2]=b;j[a+20>>2]=b;j[a+16>>2]=b+j[a+48>>2];a=c;break a}j[a+28>>2]=0;j[a+16>>2]=0;j[a+20>>2]=0;j[a>>2]=j[a>>2]|32;a=0;if((i|0)==2){break a}a=c-j[d+4>>2]|0;}B=f+32|0;return a|0}function Q(){var a=0,b=0,c=0;b=1024;while(1){a=b;b=a+4|0;c=j[a>>2];if(!((c^-1)&c-16843009&-2139062144)){continue}break}while(1){b=a;a=a+1|0;if(k[b|0]){continue}break}c=b-1024|0;a=c;a:{if(j[279]<0){b=H(a);break a}b=H(a);}if((a|0)!=(b|0)){a=b;}b:{if((((a|0)!=(c|0)?-1:0)|0)<0){break b}c:{if(j[280]==10){break c}a=j[265];if((a|0)==j[264]){break c}j[265]=a+1;h[a|0]=10;break b}b=B-16|0;B=b;h[b+15|0]=10;a=j[264];d:{if(!a){if(I()){break d}a=j[264];}c=a;a=j[265];if(!((c|0)==(a|0)|j[280]==10)){j[265]=a+1;h[a|0]=10;break d}if((C[j[269]](1040,b+15|0,1)|0)!=1){break d}}B=b+16|0;}return 0}
function I(){var a=0;a=j[278];j[278]=a-1|a;a=j[260];if(a&8){j[260]=a|32;return -1}j[261]=0;j[262]=0;a=j[271];j[267]=a;j[265]=a;j[264]=a+j[272];return 0}function M(a,b,c,d){return 0}function P(a){a=a|0;a=B-a&-16;B=a;return a|0}function N(a){return 0}function L(){return B|0}function K(a){a=a|0;B=a;}function J(){}
// EMSCRIPTEN_END_FUNCS
var C=c([null,N,O,M]);return {"d":J,"e":Q,"f":C,"g":L,"h":K,"i":P}}return E(G)}
// EMSCRIPTEN_END_ASM


)(info);},instantiate:function(binary,info){return {then:function(ok){var module=new WebAssembly.Module(binary);ok({"instance":new WebAssembly.Instance(module,info)});}}},RuntimeError:Error};wasmBinary=[];if(typeof WebAssembly!="object"){abort("no native wasm support detected");}var wasmMemory;var ABORT=false;function assert(condition,text){if(!condition){abort(text);}}var HEAP8,HEAPU8,HEAPU32;function updateMemoryViews(){var b=wasmMemory.buffer;Module["HEAP8"]=HEAP8=new Int8Array(b);Module["HEAP16"]=new Int16Array(b);Module["HEAP32"]=new Int32Array(b);Module["HEAPU8"]=HEAPU8=new Uint8Array(b);Module["HEAPU16"]=new Uint16Array(b);Module["HEAPU32"]=HEAPU32=new Uint32Array(b);Module["HEAPF32"]=new Float32Array(b);Module["HEAPF64"]=new Float64Array(b);}var INITIAL_MEMORY=Module["INITIAL_MEMORY"]||16777216;assert(INITIAL_MEMORY>=65536,"INITIAL_MEMORY should be larger than STACK_SIZE, was "+INITIAL_MEMORY+"! (STACK_SIZE="+65536+")");if(Module["wasmMemory"]){wasmMemory=Module["wasmMemory"];}else {wasmMemory=new WebAssembly.Memory({"initial":INITIAL_MEMORY/65536,"maximum":INITIAL_MEMORY/65536});}updateMemoryViews();INITIAL_MEMORY=wasmMemory.buffer.byteLength;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift());}}callRuntimeCallbacks(__ATPRERUN__);}function initRuntime(){callRuntimeCallbacks(__ATINIT__);}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift());}}callRuntimeCallbacks(__ATPOSTRUN__);}function addOnPreRun(cb){__ATPRERUN__.unshift(cb);}function addOnInit(cb){__ATINIT__.unshift(cb);}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb);}var runDependencies=0;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies);}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies);}if(runDependencies==0){if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback();}}}function abort(what){if(Module["onAbort"]){Module["onAbort"](what);}what="Aborted("+what+")";err(what);ABORT=true;what+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}var wasmBinaryFile;if(Module["locateFile"]){wasmBinaryFile="wasm_c.asm.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile);}}else {wasmBinaryFile=new URL("wasm_c.asm.wasm",import.meta.url).href;}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw "both async and sync fetching of the wasm failed"}catch(err){abort(err);}}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch=="function"&&!isFileURI(binaryFile)){return fetch(binaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw "failed to load wasm binary file at '"+binaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary(binaryFile)})}else {if(readAsync){return new Promise(function(resolve,reject){readAsync(binaryFile,function(response){resolve(new Uint8Array(response));},reject);})}}}return Promise.resolve().then(function(){return getBinary(binaryFile)})}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(function(binary){return WebAssembly.instantiate(binary,imports)}).then(function(instance){return instance}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason);})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming=="function"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch=="function"){return fetch(binaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(binaryFile,imports,callback)})})}else {return instantiateArrayBuffer(binaryFile,imports,callback)}}function createWasm(){var info={"a":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;runMemoryInitializer();Module["asm"]["f"];addOnInit(Module["asm"]["d"]);removeRunDependency();return exports}addRunDependency();function receiveInstantiationResult(result){receiveInstance(result["instance"]);}if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){err("Module.instantiateWasm callback failed with error: "+e);readyPromiseReject(e);}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return {}}var memoryInitializer="wasm_c.asm.js.mem";function runMemoryInitializer(){if(!isDataURI(memoryInitializer)){memoryInitializer=locateFile(memoryInitializer);}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=readBinary(memoryInitializer);HEAPU8.set(data,1024);}else {addRunDependency();var applyMemoryInitializer=data=>{if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,1024);if(Module["memoryInitializerRequest"])delete Module["memoryInitializerRequest"].response;removeRunDependency();};var doBrowserLoad=()=>{readAsync(memoryInitializer,applyMemoryInitializer,function(){var e=new Error("could not load memory initializer "+memoryInitializer);readyPromiseReject(e);});};if(Module["memoryInitializerRequest"]){var useRequest=()=>{var request=Module["memoryInitializerRequest"];var response=request.response;if(request.status!==200&&request.status!==0){console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+request.status+", retrying "+memoryInitializer);doBrowserLoad();return}applyMemoryInitializer(response);};if(Module["memoryInitializerRequest"].response){setTimeout(useRequest,0);}else {Module["memoryInitializerRequest"].addEventListener("load",useRequest);}}else {doBrowserLoad();}}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module);}}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num);}var printCharBuffers=[null,[],[]];var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2;}else {u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63;}if(u0<65536){str+=String.fromCharCode(u0);}else {var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023);}}return str}function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0;}else {buffer.push(curr);}}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j]);}num+=len;}HEAPU32[pnum>>2]=num;return 0}function getCFunc(ident){var func=Module["_"+ident];return func}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer);}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++;}else if(c<=2047){len+=2;}else if(c>=55296&&c<=57343){len+=4;++i;}else {len+=3;}}return len}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023;}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u;}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63;}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63;}else {if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63;}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function stringToUTF8OnStack(str){var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret}function ccall(ident,returnType,argTypes,args,opts){var toC={"string":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str);}return ret},"array":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType==="string"){return UTF8ToString(ret)}if(returnType==="boolean")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i]);}else {cArgs[i]=args[i];}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>type==="number"||type==="boolean");var numericRet=returnType!=="string";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments)}}var wasmImports={"c":_emscripten_memcpy_big,"b":_fd_write,"a":wasmMemory};createWasm();Module["_hello"]=function(){return (Module["_hello"]=Module["asm"]["e"]).apply(null,arguments)};var stackSave=function(){return (stackSave=Module["asm"]["g"]).apply(null,arguments)};var stackRestore=function(){return (stackRestore=Module["asm"]["h"]).apply(null,arguments)};var stackAlloc=function(){return (stackAlloc=Module["asm"]["i"]).apply(null,arguments)};Module["ccall"]=ccall;Module["cwrap"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller;};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun();}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("");},1);doRun();},1);}else {doRun();}}if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()();}}run();


  return Module.ready
}

);
})();

export { Module as default };
",
  "native/external/wasm/emscripten/wasm_c.js.mem.0e186.ts": "export default 'assets/wasm_c.js.mem';",
  "native/external/wasm/emscripten/wasm_c.wasm.195b9.ts": "export default '';",
  "native/external/wasm/emscripten/wasm_c.wasm.js.0e998.ts": "let $: any;export default $;",
  "wasm/emscripten.ts": "import { NATIVE_CODE_BUNDLE_MODE } from "../__virtual__/internal_constants";
import { isSupportWASM } from './is-support-wasm';
import asmFactory from "../native/external/wasm/emscripten/wasm_c.asm.js.36955";
import asmJsMemUrl from "../native/external/wasm/emscripten/wasm_c.js.mem.0e186";
function initializeWasm(): Promise<any> {
  return Promise.all([window.__cc_module_context__.import("../native/external/wasm/emscripten/wasm_c.wasm.195b9"), window.__cc_module_context__.import("../native/external/wasm/emscripten/wasm_c.wasm.js.0e998")]).then(([{
    default: wasmUrl
  }, {
    default: wasmFactory
  }]) => {
    return new Promise((resolve, reject) => {
      wasmFactory({
        locateFile(_) {
          return wasmUrl;
        }
      }).then(inst => {
        resolve(inst);
      }).catch(reject);
    });
  });
}
function initializeAsm(): Promise<any> {
  return new Promise((resolve, reject) => {
    asmFactory({
      memoryInitializerRequest: ({
        response: asmJsMemUrl,
        // this should be fs.readFileSync(asmJsMemUrl)
        status: 200
      } as Partial<XMLHttpRequest>)
    }).then(inst => {
      resolve(inst);
    }).catch(reject);
  });
}
if (NATIVE_CODE_BUNDLE_MODE === 1) {
  initializeWasm().then(inst => {
    inst._hello();
  });
} else if (NATIVE_CODE_BUNDLE_MODE === 2) {
  if (isSupportWASM) {
    initializeWasm().then(inst => {
      inst._hello();
    });
  } else {
    initializeAsm().then(inst => {
      inst._hello();
    });
  }
} else {
  initializeAsm().then(inst => {
    inst._hello();
  });
}",
}
`;

exports[`WASM build WASM: get output dir structure 1`] = `
[
  "@types/consts.d.ts",
  "@types/external-module.d.ts",
  "@types/lib.dom.d.ts",
  "__virtual__/internal_constants.ts",
  "assets/wasm_c.js.mem",
  "cc.ts",
  "exports/wasm-test.ts",
  "index.ts",
  "native/external/wasm/emscripten/wasm_c.asm.js.36955.ts",
  "native/external/wasm/emscripten/wasm_c.js.mem.0e186.ts",
  "native/external/wasm/emscripten/wasm_c.wasm.195b9.ts",
  "native/external/wasm/emscripten/wasm_c.wasm.js.0e998.ts",
  "native/external/wasm/wasm-pack/wasm_rust.js.ce353.ts",
  "native/external/wasm/wasm-pack/wasm_rust.wasm.ba172.ts",
  "native/external/wasm/wasm-pack/wasm_rust.wasm.d.ts",
  "system-cc.js",
  "wasm/emscripten.ts",
  "wasm/index.ts",
  "wasm/is-support-wasm.ts",
  "wasm/wasm-pack.ts",
]
`;

exports[`WASM cull meshopt: asm module content 1`] = `"let $: any;export default $;"`;

exports[`WASM cull meshopt: output dir structure 1`] = `
[
  "@types/consts.d.ts",
  "@types/external-module.d.ts",
  "@types/lib.dom.d.ts",
  "__virtual__/internal_constants.ts",
  "cc.ts",
  "cull-meshopt/index.ts",
  "exports/cull-meshopt.ts",
  "index.ts",
  "native/external/wasm/emscripten/meshopt/meshopt_decoder.asm.js.af2bd.ts",
  "native/external/wasm/emscripten/meshopt/meshopt_decoder.wasm.js.bd175.ts",
  "native/external/wasm/emscripten/meshopt/meshopt_decoder.wasm.wasm.d3d07.ts",
  "native/external/wasm/wasm-pack/wasm_rust.wasm.d.ts",
  "system-cc.js",
]
`;

exports[`build time constant intrinsic flag 1`] = `
[
  "intrinsic-flag/intrinsic-flag-true.ts",
]
`;

exports[`dynamic import: index content 1`] = `
"const promise = window.__cc_module_context__.import("../packages/@module-query/env/src/native/env");
type TsImportTypes = typeof import("../packages/@module-query/env/src/native/env");
export { promise, TsImportTypes };"
`;

exports[`dynamic import: output dir structure 1`] = `
[
  "@types/consts.d.ts",
  "@types/external-module.d.ts",
  "@types/lib.dom.d.ts",
  "cc.ts",
  "dynamic-import/index.ts",
  "exports/dynamic-import.ts",
  "index.ts",
  "native/external/wasm/wasm-pack/wasm_rust.wasm.d.ts",
  "packages/@module-query/env/src/native/env.ts",
  "system-cc.js",
]
`;

exports[`engine-ts 1`] = `
{
  "__virtual__/CCBUILD_HELPER_MODULE.ts": {
    "code": "/**
 * TsPropertyDecorator cannot access the property descriptor, sometimes we need to access the initializer in property descriptor.
 * This helper helps receive the initializer from EngineCompiler, and generate a BabelPropertyDecorator in runtime.
 * @param decoratorOrFactory A TsPropertyDecorator or a decorator factory
 * @param initializer the property initializer generate from engine compiler
 * @param factoryArgs if \`decoratorOrFactory\` is a factory, then we may need some arguments for this factory method.
 * @returns BabelPropertyDecorator
 */
export function CCBuildTsFieldDecoratorHelper(decoratorOrFactory: Function, initializer: Function | null, ...factoryArgs: any[]): PropertyDecorator {
  if (factoryArgs.length > 0) {
    const decorator = decoratorOrFactory(...factoryArgs);
    return (target, propertyKey) => {
      decorator(target, propertyKey, initializer);
    };
  } else {
    return (target, propertyKey) => {
      decoratorOrFactory(target, propertyKey, initializer);
    };
  }
}",
  },
  "__virtual__/internal_constants.ts": {
    "code": "function tryDefineGlobal(name, value) {
  const _global = typeof window === 'undefined' ? global : window;
  if (typeof _global[name] === 'undefined') {
    return _global[name] = value;
  } else {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return _global[name];
  }
}
export const HTML5 = false;
export const NATIVE = true;
export const ANDROID = false;
export const IOS = false;
export const MAC = false;
export const WINDOWS = false;
export const LINUX = false;
export const OHOS = false;
export const OPEN_HARMONY = true;
export const WECHAT = false;
tryDefineGlobal('CC_WECHAT', false);
export const WECHAT_MINI_PROGRAM = false;
export const BAIDU = false;
tryDefineGlobal('CC_BAIDU', false);
export const XIAOMI = false;
tryDefineGlobal('CC_XIAOMI', false);
export const ALIPAY = false;
tryDefineGlobal('CC_ALIPAY', false);
export const TAOBAO = false;
export const TAOBAO_MINIGAME = false;
export const BYTEDANCE = false;
tryDefineGlobal('CC_BYTEDANCE', false);
export const OPPO = false;
tryDefineGlobal('CC_OPPO', false);
export const VIVO = false;
tryDefineGlobal('CC_VIVO', false);
export const HUAWEI = false;
tryDefineGlobal('CC_HUAWEI', false);
export const COCOSPLAY = false;
tryDefineGlobal('CC_COCOSPLAY', false);
export const QTT = false;
tryDefineGlobal('CC_QTT', false);
export const LINKSURE = false;
tryDefineGlobal('CC_LINKSURE', false);
export const EDITOR = false;
tryDefineGlobal('CC_EDITOR', false);
export const PREVIEW = false;
tryDefineGlobal('CC_PREVIEW', false);
export const BUILD = true;
tryDefineGlobal('CC_BUILD', true);
export const TEST = false;
tryDefineGlobal('CC_TEST', false);
export const DEBUG = true;
tryDefineGlobal('CC_DEBUG', true);
export const SERVER_MODE = false;
export const DEV = false;
tryDefineGlobal('CC_DEV', false);
export const MINIGAME = false;
tryDefineGlobal('CC_MINIGAME', false);
export const RUNTIME_BASED = false;
tryDefineGlobal('CC_RUNTIME_BASED', false);
export const SUPPORT_JIT = false;
tryDefineGlobal('CC_SUPPORT_JIT', false);
export const JSB = true;
tryDefineGlobal('CC_JSB', true);
export const NOT_PACK_PHYSX_LIBS = false;
export const NET_MODE = 0;
export const WEBGPU = false;
export let NATIVE_CODE_BUNDLE_MODE = 2;
export const EDITOR_NOT_IN_PREVIEW = false;
export const WASM_SUBPACKAGE = false;
export const CULL_MESHOPT = false;",
  },
  "animation/animation.ts": {
    "code": "export class Animation {
  play() {}
}",
  },
  "animation/index.ts": {
    "code": "export * from './animation';",
  },
  "audio/as-type.ts": {
    "code": "const a = 1;
const b = 2;
// TODO: this is a bug in babel
// const c = ((a as unknown as number) & b) as unknown as number;
// const d = (a & b) as unknown as number;",
  },
  "audio/dynamic-import.ts": {
    "code": "window.__cc_module_context__.import('./player');",
  },
  "audio/index.ts": {
    "code": "import debugInfo from '../debug-info';
export * from './player';",
  },
  "audio/internal-native.ts": {
    "code": "// @ts-ignore
console.log('internal-native');",
  },
  "audio/module.native.ts": {
    "code": "// @ts-ignore
console.log('module that after override');",
  },
  "audio/player.ts": {
    "code": "import "./internal-native";
import { EDITOR, TEST } from "../__virtual__/internal_constants";
import "./module.native";
import "../pal/audio/native";
import "../pal/minigame/native";
import { testDecorator } from "../decorators";
import { testDecorator as testDecorator2 } from "../decorators";
import { zlib } from '../external/zlib';
import { zlib as zlib2 } from '../external/zlib.js';
import './struct';
import './template-string-type';
import './dynamic-import';
import './as-type';
// @ts-ignore
console.log(zlib.Inflate);
// @ts-ignore
console.log(zlib2.Inflate);
@testDecorator
export class Player {
  @testDecorator
  play(): Promise<void> {
    if (EDITOR) {
      // @ts-ignore
      console.log('this is editor');
    } else if (TEST) {
      // @ts-ignore
      console.log('this is test');
    }
    return new Promise(resolve => resolve());
  }
}
export const player: Player = new Player();
player.play().then(() => {
  // @ts-ignore
  console.log('test log');
});
export const testConsoleLog = {
  test: (): void => {
    // @ts-ignore
    console.warn('test console log');
  },
  test2: (): void => // @ts-ignore
  console.warn('test console log'),
  test3: (): number => 1
};",
  },
  "audio/struct.ts": {
    "code": "function test1(structAlias: Object) {
  const a = {
    struct: structAlias
  };
  // @ts-ignore
  console.warn(a.struct);
}
function test2(a: number, structAlias: Object) {
  const b = {
    struct: structAlias
  };
  const c = {
    struct: structAlias
  };
  const d = {
    struct: 1
  };
  const e = {
    struct: () => {}
  };
  // @ts-ignore
  console.warn(b.struct);
}
function test3() {
  const structAlias = {
    test() {},
    test2: 1
  };
  structAlias.test();
  // @ts-ignore
  console.error(structAlias.test2);
}
function test4(test: {
  struct: number;
}) {
  const {
    struct: structAlias
  } = test;
  const test2 = {
    struct: structAlias
  };
}
interface ITest {
  struct: number;
}
function test5({
  struct: structAlias
}: ITest) {
  const test = {
    struct: structAlias
  };
}
class Mesh {
  get struct() {
    return 1;
  }
  set struct(v) {}
}
class Mesh2 {
  public struct: number = 1;
}
class Mesh3 {
  public struct() {}
}
class Mesh4 {
  private static struct = 1;
}
class Mesh5 {
  private test(structAlias: number) {}
}
function test6(mesh2?: Mesh2, mesh3?: Mesh3) {
  mesh2!.struct;
  mesh3?.struct();
}",
  },
  "audio/template-string-type.ts": {
    "code": "const DELIMITER = '$_$';
const POSTFIX_TYPE: string = \`\${DELIMITER}type\`;
const POSTFIX_EDITOR_ONLY: string = \`\${DELIMITER}editorOnly\`;
const POSTFIX_DEFAULT: string = \`\${DELIMITER}default\`;
const POSTFIX_FORMERLY_SERIALIZED_AS: string = \`\${DELIMITER}formerlySerializedAs\`;",
  },
  "debug-info.ts": {
    "code": "export default {
  "1006": "[Action step]. override me",
  "1007": "[Action update]. override me",
  "1008": "[Action reverse]. override me",
  "1100": "Expected 'data' dict, but not found. Config file: %s",
  "1101": "Please load the resource first : %s",
  "1200": "cocos2d: Director: Error in gettimeofday"
};",
  },
  "decorators.ts": {
    "code": "export const testDecorator: any = function () {};",
  },
  "exports/animation.ts": {
    "code": "export * from '../animation';",
  },
  "exports/audio.ts": {
    "code": "export * from '../audio';
export * from '../misc';",
  },
  "external/zlib.d.ts": {
    "code": "declare namespace zlib {
  export function Inflate(data: any, info?: any): void;
}
export { zlib };",
  },
  "external/zlib.js": {
    "code": "export const zlib = {
  Inflate() {}
};",
  },
  "misc/decorator.ts": {
    "code": "import { CCBuildTsFieldDecoratorHelper as _CCBuildTsFieldDecoratorHelper } from "../__virtual__/CCBUILD_HELPER_MODULE";
const classDec: ClassDecorator = function (target) {};
const propDec1: PropertyDecorator = function (target, propertyKey) {};
const propDec2: PropertyDecorator = function (target, propertyKey) {};
function propDecFactory(name: string, ...args: any) {
  return (function (target, propertyKey) {} as PropertyDecorator);
}
@classDec
class A {
  @_CCBuildTsFieldDecoratorHelper(propDec1, () => 1)
  public test1 = 1;
  @_CCBuildTsFieldDecoratorHelper(propDec1, () => 2)
  @_CCBuildTsFieldDecoratorHelper(propDec2, () => 2)
  public test2 = 2;
  @_CCBuildTsFieldDecoratorHelper(propDecFactory, () => 3, 'test')
  public test3 = 3;
  @_CCBuildTsFieldDecoratorHelper(propDec1, () => 4)
  @_CCBuildTsFieldDecoratorHelper(propDecFactory, () => 4, 'test', 1, 2, () => {})
  public test4 = 4;
  @_CCBuildTsFieldDecoratorHelper(propDec1, null)
  public test5;
}",
  },
  "misc/index.ts": {
    "code": "import './decorator';
import { RectAlias } from './rect';
import { PathAlias } from './path';
let p: PathAlias = new PathAlias();
const r: RectAlias = RectAlias.from(0, 0, 100, 100);
interface Test {
  r: RectAlias;
  p: PathAlias;
  test(r: RectAlias, p: PathAlias): RectAlias;
}
// @ts-ignore
console.log(p, r);
export * from './rect';
export * from './path';",
  },
  "misc/path.ts": {
    "code": "class PathAlias {}
export { PathAlias };",
  },
  "misc/rect.ts": {
    "code": "export class RectAlias {
  public static from(x: number, y: number, width: number, height: number): RectAlias {
    throw 'not implemented';
  }
}",
  },
  "pal/audio/native.ts": {
    "code": "// @ts-ignore
console.log('native audio');",
  },
  "pal/minigame/native.ts": {
    "code": "// @ts-ignore
console.log('native');",
  },
}
`;

exports[`node modules 1`] = `
[
  "@types/consts.d.ts",
  "@types/external-module.d.ts",
  "@types/lib.dom.d.ts",
  "cc.ts",
  "exports/node-modules.ts",
  "index.ts",
  "native/external/wasm/wasm-pack/wasm_rust.wasm.d.ts",
  "node_modules/@cocos/cannon/cannon.js",
  "node_modules/@cocos/dragonbones-js/dragonBones.js",
  "system-cc.js",
]
`;

exports[`node modules 2`] = `
"import * as db from "../node_modules/@cocos/dragonbones-js/dragonBones.js";
import * as c from "../node_modules/@cocos/cannon/cannon.js";
// @ts-ignore
console.log(db, c);
export { db, c };"
`;

exports[`type build type merge 1`] = `
[
  "@types/consts.d.ts",
  "@types/external-module.d.ts",
  "@types/lib.dom.d.ts",
  "cc.ts",
  "exports/type-merge.ts",
  "index.ts",
  "native/external/wasm/wasm-pack/wasm_rust.wasm.d.ts",
  "system-cc.js",
  "type-merge/type.jsb.ts",
  "type-merge/type.web.ts",
]
`;
